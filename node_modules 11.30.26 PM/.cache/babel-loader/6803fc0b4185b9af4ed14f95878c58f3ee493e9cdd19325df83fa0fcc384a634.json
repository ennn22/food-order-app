{"ast":null,"code":"var _jsxFileName = \"/Users/ying/Code/react-practiculum-2/food-order-app/src/Store/ItemsProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, useEffect, useState, useReducer } from 'react';\nimport ItemsContext from \"./ItemsContext\";\nimport api from \"../Api/meals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useItemContext() {\n  _s();\n  return useContext(ItemsContext);\n}\n// const initialState = {\n//   switchPage: false,\n//   itemsData: []\n// }\n\n// function reducer(state, action)  {\n//   switch(action.type) {\n//     case \"addNewItem\": {\n//       return {\n//         ...state,\n//         itemsData: [...state, action.payload]\n//       };\n//     }\n//     case \"removeItem\": {\n//       const updatedItemData = state.itemsData.filter((item) => item.id !== action.payload);\n//       return {\n//         ...state,\n//         itemsData: updatedItemData\n//       }\n//     }\n//     case \"updateItem\": {\n//       return {\n//         ...state,\n//         itemsData: state.itemsData.map((item) => {\n//           if(item.id === action.payload.id) {\n//             return {\n//               ...item,\n//               ...action.payload\n//             }\n//           };\n//           return item;\n//         })\n//       }\n//     }\n//     default:\n//       return state;\n//   }\n//   throw Error('Unknown action: ' + action.type);\n// }\n_s(useItemContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst ItemsProvider = ({\n  children\n}) => {\n  _s2();\n  const [itemsData, setItemsData] = useState([]);\n\n  // const [state, dispatch] = useReducer(reducer, initialState);\n\n  //get Meals Menu from Api\n  // const getMealsAndDispatch = async (itemsData) => {\n  //   const getMeals = async (itemsData) => {\n  //     const res = (await api.get(\"/meals\"))\n  //       .then((res) => res.data());\n  //     return res;\n  //   }\n  //   const meals = await getMeals(itemsData);\n  //   dispatch({ type: \"addNewItem\", payload: meals });\n  // }\n\n  //get itemsData from Api\n  const getItemsData = async () => {\n    const res = await api.get(\"/meals\");\n    const data = res.data;\n    setItemsData(data);\n  };\n\n  //Add new item to menu\n  const addItem = async item => {\n    const request = {\n      id: Date.now(),\n      ...item\n    };\n    const res = await api.post(\"/meals\", request);\n    setItemsData([...itemsData, res.data]);\n  };\n  const handleInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewItem(previousItem => ({\n      ...previousItem,\n      [name]: value\n    }));\n  };\n  const handleSubmitItem = e => {\n    e.preventDefault();\n    addItem(newItem);\n    setNewItem({\n      name: \"\",\n      desc: \"\",\n      img: \"\",\n      price: \"\"\n    });\n  };\n\n  //Delete meal from menu\n  const deleteItem = async id => {\n    await api.delete(`/meals/${id}`);\n    const updatedItemsList = itemsData.filter(itemData => {\n      return itemsData.id !== id;\n    });\n    setItemsData(updatedItemsList);\n  };\n\n  // const handleAddItem = async (item) => {\n  //   await dispatch({ type: \"addNewItem\", payload: item });\n  // }\n\n  // // Delete meal from menu\n  // const handleDeleteItem = async (id) => {\n  //   await api.delete(`/meals/${id}`);\n  //   dispatch({ type: \"removeItem\", payload: id });\n  //   const updatedMealList = meals.filter((meal) => {\n  //     return meal.id !== id;\n  //   });\n  //   setMeals(updatedMealList);\n  // }\n\n  const itemCtxValue = {\n    itemsData,\n    getItemsData,\n    addItem,\n    deleteItem\n  };\n  return /*#__PURE__*/_jsxDEV(ItemsContext.Provider, {\n    value: itemCtxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s2(ItemsProvider, \"TymAG3RRT/IAyB+s1AeWvK0nTTA=\");\n_c = ItemsProvider;\nexport default ItemsProvider;\nvar _c;\n$RefreshReg$(_c, \"ItemsProvider\");","map":{"version":3,"names":["useContext","useEffect","useState","useReducer","ItemsContext","api","jsxDEV","_jsxDEV","useItemContext","_s","ItemsProvider","children","_s2","itemsData","setItemsData","getItemsData","res","get","data","addItem","item","request","id","Date","now","post","handleInput","e","name","value","target","setNewItem","previousItem","handleSubmitItem","preventDefault","newItem","desc","img","price","deleteItem","delete","updatedItemsList","filter","itemData","itemCtxValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ying/Code/react-practiculum-2/food-order-app/src/Store/ItemsProvider.js"],"sourcesContent":["import { useContext, useEffect, useState, useReducer } from 'react';\nimport ItemsContext from \"./ItemsContext\";\nimport api from \"../Api/meals\";\n\nexport function useItemContext() {\n  return useContext(ItemsContext);\n}\n// const initialState = {\n//   switchPage: false,\n//   itemsData: []\n// }\n\n// function reducer(state, action)  {\n//   switch(action.type) {\n//     case \"addNewItem\": {\n//       return {\n//         ...state,\n//         itemsData: [...state, action.payload]\n//       };\n//     }\n//     case \"removeItem\": {\n//       const updatedItemData = state.itemsData.filter((item) => item.id !== action.payload);\n//       return {\n//         ...state,\n//         itemsData: updatedItemData\n//       }\n//     }\n//     case \"updateItem\": {\n//       return {\n//         ...state,\n//         itemsData: state.itemsData.map((item) => {\n//           if(item.id === action.payload.id) {\n//             return {\n//               ...item,\n//               ...action.payload\n//             }\n//           };\n//           return item;\n//         })\n//       }\n//     }\n//     default:\n//       return state;\n//   }\n//   throw Error('Unknown action: ' + action.type);\n// }\n\nconst ItemsProvider = ({ children }) => {\n  const [itemsData, setItemsData] = useState([]);\n\n  // const [state, dispatch] = useReducer(reducer, initialState);\n\n  //get Meals Menu from Api\n  // const getMealsAndDispatch = async (itemsData) => {\n  //   const getMeals = async (itemsData) => {\n  //     const res = (await api.get(\"/meals\"))\n  //       .then((res) => res.data());\n  //     return res;\n  //   }\n  //   const meals = await getMeals(itemsData);\n  //   dispatch({ type: \"addNewItem\", payload: meals });\n  // }\n\n  //get itemsData from Api\n  const getItemsData = async () => {\n    const res = await api.get(\"/meals\");\n    const data = res.data;\n    setItemsData(data);\n  }\n\n  //Add new item to menu\n  const addItem = async (item) => {\n    const request = { id: Date.now(), ...item};\n    const res = await api.post(\"/meals\", request);\n    setItemsData([...itemsData, res.data]);\n  };\n\n  const handleInput = (e) => {\n    const { name, value } = e.target;\n    setNewItem((previousItem) => ({\n      ...previousItem, [name]: value\n    })) \n  };\n\n  const handleSubmitItem = (e) => {\n    e.preventDefault();\n    addItem(newItem);\n    setNewItem({name:\"\", desc:\"\", img:\"\", price:\"\"});\n  }\n\n  //Delete meal from menu\n  const deleteItem = async (id) => {\n    await api.delete(`/meals/${id}`);\n    const updatedItemsList = itemsData.filter((itemData) => {\n      return itemsData.id !== id;\n    });\n    setItemsData(updatedItemsList);\n  }\n\n\n  // const handleAddItem = async (item) => {\n  //   await dispatch({ type: \"addNewItem\", payload: item });\n  // }\n\n  // // Delete meal from menu\n  // const handleDeleteItem = async (id) => {\n  //   await api.delete(`/meals/${id}`);\n  //   dispatch({ type: \"removeItem\", payload: id });\n  //   const updatedMealList = meals.filter((meal) => {\n  //     return meal.id !== id;\n  //   });\n  //   setMeals(updatedMealList);\n  // }\n\n  const itemCtxValue = {\n    itemsData,\n    getItemsData,\n    addItem,\n    deleteItem\n  }\n\n  return (\n    <ItemsContext.Provider value={itemCtxValue}>\n      { children }\n    </ItemsContext.Provider>\n  );\n}\n\nexport default ItemsProvider;"],"mappings":";;;AAAA,SAASA,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnE,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,OAAOT,UAAU,CAACI,YAAY,CAAC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAK,EAAA,CAzCgBD,cAAc;AA2C9B,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACtC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE9C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,GAAG,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,QAAQ,CAAC;IACnC,MAAMC,IAAI,GAAGF,GAAG,CAACE,IAAI;IACrBJ,YAAY,CAACI,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,MAAOC,IAAI,IAAK;IAC9B,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAE,GAAGJ;IAAI,CAAC;IAC1C,MAAMJ,GAAG,GAAG,MAAMX,GAAG,CAACoB,IAAI,CAAC,QAAQ,EAAEJ,OAAO,CAAC;IAC7CP,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEG,GAAG,CAACE,IAAI,CAAC,CAAC;EACxC,CAAC;EAED,MAAMQ,WAAW,GAAIC,CAAC,IAAK;IACzB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCC,UAAU,CAAEC,YAAY,KAAM;MAC5B,GAAGA,YAAY;MAAE,CAACJ,IAAI,GAAGC;IAC3B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,gBAAgB,GAAIN,CAAC,IAAK;IAC9BA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClBf,OAAO,CAACgB,OAAO,CAAC;IAChBJ,UAAU,CAAC;MAACH,IAAI,EAAC,EAAE;MAAEQ,IAAI,EAAC,EAAE;MAAEC,GAAG,EAAC,EAAE;MAAEC,KAAK,EAAC;IAAE,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG,MAAOjB,EAAE,IAAK;IAC/B,MAAMjB,GAAG,CAACmC,MAAM,CAAE,UAASlB,EAAG,EAAC,CAAC;IAChC,MAAMmB,gBAAgB,GAAG5B,SAAS,CAAC6B,MAAM,CAAEC,QAAQ,IAAK;MACtD,OAAO9B,SAAS,CAACS,EAAE,KAAKA,EAAE;IAC5B,CAAC,CAAC;IACFR,YAAY,CAAC2B,gBAAgB,CAAC;EAChC,CAAC;;EAGD;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,YAAY,GAAG;IACnB/B,SAAS;IACTE,YAAY;IACZI,OAAO;IACPoB;EACF,CAAC;EAED,oBACEhC,OAAA,CAACH,YAAY,CAACyC,QAAQ;IAAChB,KAAK,EAAEe,YAAa;IAAAjC,QAAA,EACvCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE5B,CAAC;AAAArC,GAAA,CA/EKF,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAiFnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}