{"ast":null,"code":"var _jsxFileName = \"/Users/ying/Code/react-practiculum-2/food-order-app/src/Store/ItemsProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, useEffect, useState } from 'react';\nimport ItemsContext from \"./ItemsContext\";\nimport api from \"../Api/meals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useItemContext() {\n  _s();\n  return useContext(ItemsContext);\n}\n_s(useItemContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst initialState = {\n  switchPage: true,\n  itemsData: []\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        ...state,\n        itemsData: [...state.itemsData, action.payload]\n      };\n    case \"remove\":\n      const updatedItemsList = itemsData.filter(item => {\n        return item.id !== id;\n      });\n      return {\n        ...state,\n        itemsData: updatedItemsList\n      };\n  }\n};\n\n// function reducer(state, action)  {\n//   switch(action.type) {\n//     case \"addNewItem\": {\n//       return {\n//         ...state,\n//         itemsData: [...state, action.payload]\n//       };\n//     }\n//     case \"removeItem\": {\n//       const updatedItemData = state.itemsData.filter((item) => item.id !== action.payload);\n//       return {\n//         ...state,\n//         itemsData: updatedItemData\n//       }\n//     }\n//     case \"updateItem\": {\n//       return {\n//         ...state,\n//         itemsData: state.itemsData.map((item) => {\n//           if(item.id === action.payload.id) {\n//             return {\n//               ...item,\n//               ...action.payload\n//             }\n//           };\n//           return item;\n//         })\n//       }\n//     }\n//     default:\n//       return state;\n//   }\n//   throw Error('Unknown action: ' + action.type);\n// }\n\nconst ItemsProvider = ({\n  children\n}) => {\n  _s2();\n  const [switchPage, setSwitchPage] = useState(true);\n  const [itemsData, setItemsData] = useState([]);\n\n  // const [state, dispatch] = useReducer(reducer, initialState);\n\n  // {switchPage ? <Users /> : <Admin /> }\n\n  //get itemsData from Api\n  const getItemsData = async () => {\n    const res = await api.get(\"/meals\");\n    const data = res.data;\n    setItemsData(data);\n  };\n  useEffect(() => {\n    getItemsData();\n  }, []);\n\n  //Add new item to menu\n  const addItem = async item => {\n    const request = {\n      id: Date.now(),\n      ...item\n    };\n    const res = await api.post(\"/meals\", request);\n    setItemsData([...itemsData, res.data]);\n  };\n\n  //Delete item from menu\n  const deleteItem = async id => {\n    await api.delete(`/meals/${id}`);\n    const updatedItemsList = itemsData.filter(item => {\n      return item.id !== id;\n    });\n    setItemsData(updatedItemsList);\n  };\n\n  // const handleAddItem = async (item) => {\n  //   await dispatch({ type: \"addNewItem\", payload: item });\n  // }\n\n  // // Delete meal from menu\n  // const handleDeleteItem = async (id) => {\n  //   await api.delete(`/meals/${id}`);\n  //   dispatch({ type: \"removeItem\", payload: id });\n  //   const updatedMealList = meals.filter((meal) => {\n  //     return meal.id !== id;\n  //   });\n  //   setMeals(updatedMealList);\n  // }\n\n  const itemCtxValue = {\n    itemsData,\n    switchPage,\n    setSwitchPage,\n    getItemsData,\n    addItem,\n    deleteItem\n  };\n  return /*#__PURE__*/_jsxDEV(ItemsContext.Provider, {\n    value: itemCtxValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s2(ItemsProvider, \"5srfoGqIPyv+mdn5gbCYlZ+vh/M=\");\n_c = ItemsProvider;\nexport default ItemsProvider;\nvar _c;\n$RefreshReg$(_c, \"ItemsProvider\");","map":{"version":3,"names":["useContext","useEffect","useState","ItemsContext","api","jsxDEV","_jsxDEV","useItemContext","_s","initialState","switchPage","itemsData","reducer","state","action","type","payload","updatedItemsList","filter","item","id","ItemsProvider","children","_s2","setSwitchPage","setItemsData","getItemsData","res","get","data","addItem","request","Date","now","post","deleteItem","delete","itemCtxValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ying/Code/react-practiculum-2/food-order-app/src/Store/ItemsProvider.js"],"sourcesContent":["import { useContext, useEffect, useState } from 'react';\nimport ItemsContext from \"./ItemsContext\";\nimport api from \"../Api/meals\";\n\nexport function useItemContext() {\n  return useContext(ItemsContext);\n}\n\nconst initialState = {\n  switchPage: true,\n  itemsData: []\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add\":\n      return {\n        ...state,\n        itemsData: [...state.itemsData, action.payload]\n      };\n    case \"remove\":\n      const updatedItemsList = itemsData.filter((item) => {\n        return item.id !== id;\n      });\n      return {\n        ...state, \n        itemsData: updatedItemsList\n      }\n  }\n}\n\n// function reducer(state, action)  {\n//   switch(action.type) {\n//     case \"addNewItem\": {\n//       return {\n//         ...state,\n//         itemsData: [...state, action.payload]\n//       };\n//     }\n//     case \"removeItem\": {\n//       const updatedItemData = state.itemsData.filter((item) => item.id !== action.payload);\n//       return {\n//         ...state,\n//         itemsData: updatedItemData\n//       }\n//     }\n//     case \"updateItem\": {\n//       return {\n//         ...state,\n//         itemsData: state.itemsData.map((item) => {\n//           if(item.id === action.payload.id) {\n//             return {\n//               ...item,\n//               ...action.payload\n//             }\n//           };\n//           return item;\n//         })\n//       }\n//     }\n//     default:\n//       return state;\n//   }\n//   throw Error('Unknown action: ' + action.type);\n// }\n\nconst ItemsProvider = ({ children }) => {\n  const [switchPage, setSwitchPage] = useState(true);\n  const [itemsData, setItemsData] = useState([]);\n\n  // const [state, dispatch] = useReducer(reducer, initialState);\n\n    // {switchPage ? <Users /> : <Admin /> }\n\n  //get itemsData from Api\n  const getItemsData = async () => {\n    const res = await api.get(\"/meals\");\n    const data = res.data;\n    setItemsData(data);\n  }\n  useEffect(() => {\n    getItemsData()\n  }, [])\n  \n\n  //Add new item to menu\n  const addItem = async (item) => {\n    const request = { id: Date.now(), ...item};\n    const res = await api.post(\"/meals\", request);\n    setItemsData([...itemsData, res.data]);\n  };\n\n  //Delete item from menu\n  const deleteItem = async (id) => {\n    await api.delete(`/meals/${id}`);\n    const updatedItemsList = itemsData.filter((item) => {\n      return item.id !== id;\n    });\n    setItemsData(updatedItemsList);\n  }\n\n\n  // const handleAddItem = async (item) => {\n  //   await dispatch({ type: \"addNewItem\", payload: item });\n  // }\n\n  // // Delete meal from menu\n  // const handleDeleteItem = async (id) => {\n  //   await api.delete(`/meals/${id}`);\n  //   dispatch({ type: \"removeItem\", payload: id });\n  //   const updatedMealList = meals.filter((meal) => {\n  //     return meal.id !== id;\n  //   });\n  //   setMeals(updatedMealList);\n  // }\n\n  const itemCtxValue = {\n    itemsData,\n    switchPage,\n    setSwitchPage,\n    getItemsData,\n    addItem,\n    deleteItem\n  }\n\n  return (\n    <ItemsContext.Provider value={itemCtxValue}>\n      { children }\n    </ItemsContext.Provider>\n  );\n}\n\nexport default ItemsProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}